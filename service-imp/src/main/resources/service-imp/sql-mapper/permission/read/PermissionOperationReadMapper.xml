<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wang.serviceimp.dao.permission.read.PermissionOperationReadDao">
	
  	<resultMap id="BaseResultMap" type="com.wang.service.entity.permission.PermissionOperationEntity">
		<id column="operationID" property="operationID" jdbcType="INTEGER"/>
		<result column="typeCode" property="typeCode" jdbcType="VARCHAR"/>
		<result column="operationName" property="operationName" jdbcType="VARCHAR"/>
		<result column="fun" property="fun" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="getAllColumn">
		operationID, typeCode, operationName, fun
    </sql> 
    
    <select id="getOperationForApp" resultMap="BaseResultMap">
    	select a.operationID as operationID,a.operationName as operationName 
    	from sys_role_operation a 
    	where a.typeCode = 'SYS_APP'
    </select>
    
    <select id="getOperationIDByResourceID" resultType="java.lang.Integer">
		select b.operationID as operationID
		from sys_role_resource a 
		inner join sys_role_permission b on a.resourceID = b.resourceID 
		where a.resourceID = #{resourceID ,jdbcType=INTEGER}
    </select>
    
    <select id="getOperationStringArgsByResourceID" resultType="java.util.Map">
    	SELECT 
			GROUP_CONCAT(a.operationID) as operationIDs,
			GROUP_CONCAT(a.operationName) as operationNames
		FROM permission_operation a
		LEFT JOIN permission_permission b ON a.operationID = b.operationID
		WHERE b.resourceID = #{resourceID ,jdbcType=INTEGER}
    </select>
	
</mapper>
